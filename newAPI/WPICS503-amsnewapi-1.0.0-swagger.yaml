swagger: '2.0'
info:
  description: API
  version: 1.0.0
  title: AMSNEWAPI1
  # put the contact info for your development or API team
  contact:
    email: xfan3@wpi.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: admins
  description: Adiminstor operations
- name: register
  description: Register users operations

paths:
  /classification/:
    get:
      tags:
      - register
      - admins
      summary: request to get all the classification
      operationId: getClassification
      description: get classification
      produces:
      - application/json
     
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Classification'
        400:
          description: bad input parameter
          
  /login/:
    post:
      tags:
      - register
      - admins
      summary: login API
      operationId: login
      description: user log in api
      produces:
      - application/json
     
      responses:
        200:
          description: success
          schema:
            items:
              $ref: '#/definitions/User'
        400:
          description: error

  /register/:
    post:
      summary: register API
      operationId: register
      description: user register api
      produces:
      - application/json
     
      responses:
        200:
          description: success
          schema:
            items:
              $ref: '#/definitions/User'
        400:
          description: error
          
  /classification/Algorithm/:
    get:
      tags:
      - register
      summary: Algorithm
      operationId: getAlgorithm
      description: get Algorithm by classification id
      produces:
      - application/json
      responses:
        200:
          description: success
          schema:
            type: string
        400:
          description: bad input parameter
        
  /classification/Implementation/:
    get:
      tags:
      - register
      summary: getImplementation
      operationId: getImplementation
      description: get Implementation by algorithm id
      produces:
      - application/json
      responses:
        200:
          description: success and return implementation
          schema:
            type: string
        400:
          description: bad input parameter
          
          
  /classification/add/:
    post:
      tags:
      - register
      - admins
      summary: request to add an classification
      operationId: addClassification
      description: add classification
      produces:
      - application/json
     
      responses:
        200:
          description: success
        400:
          description: bad input parameter

  /classification/Algorithm/add/:
    post:
      tags:
      - register
      - admins
      summary: request to add an algorithm
      operationId: addAlgorithm
      description: add algorithm
      produces:
      - application/json
     
      responses:
        200:
          description: success
        400:
          description: bad input parameter
          
  /classification/Implementation/add/:
    post:
      tags:
      - register
      - admins
      summary: request to add an implementation
      operationId: addImplementation
      description: add implementation
      produces:
      - application/json
     
      responses:
        200:
          description: success
        400:
          description: bad input parameter

definitions:
  Classification:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
      name:
        type: string
        
  User:
    type: object
    required:
    - id
    - name
    - password

  
        

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /xfan3/GetClassification/1.0.0
# schemes:
#  - http
# Added by API Auto Mocking Plugin
schemes:
 - https